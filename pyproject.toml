[project]
name = "pyodb"
version = "0.1.5"
authors = [
  { name="Nikolas Teuschl", email="nikolas.teuschl@alpha-origin.biz" },
]
description = "Python Object DataBase (PyODB) is an ORM library aiming to be as simple to use as possible."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = [
    "cache", "caching", "datacache",
    "orm", "database", "sqlite",
    "sqlite3",
]
dependencies = []
license = { file = "LICENSE" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
"Homepage" = "https://github.com/NeoSecundus/PyODB"
"Bug Tracker" = "https://github.com/NeoSecundus/PyODB/issues"
"Changelog" = "https://github.com/NeoSecundus/PyODB/blob/main/CHANGELOG.md"

[tool.ruff]
# Which types of errors to include
select = [
    "F", # Pyflakes
    "E", # PyCodestyle Errors
    "W", # PyCodestyle Warnings
    "I", # isort conventions (Import sorting)
    "N", # PEP8 Naming Conventions
    "PLC", # Pylint Conventions
    "PLE", # Pylint Errors
    "PLR", # Pylint Refactors
    "PLW", # Pylint Warnings
    "RUF", # Ruff specific errors
    ]

ignore = ["N818", "PLR2004", "E701", "RUF005", "PLW2901", "I001"]
line-length = 100
force-exclude = true
exclude = [
    ".git",
    ".vscode",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "scripts",
    "playground",
    "docs",
    "*test*"
]
respect-gitignore = true
format = "text"

[tool.ruff.per-file-ignores]
"*items.py" = ["N805", "N815"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pylint]
max-args = 6
max-returns = 4

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true
max-doc-length = 100

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.mypy]
implicit_optional = true
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
[tox]
env_list =
    py{310,311,312}
minversion = 4.4.8

[testenv]
description = Run tests with pytest
package = wheel
wheel_build_env = .pkg
deps =
    pytest>=7
    pydantic==1.10.9
commands =
    python3 -m pytest {tty:--color=yes} test {posargs}
download = True
"""
